{"version":3,"sources":["StyledComponent/YourButton.module.scss","Layout/Navbar.js","Card/CardTeacher.js","Card/CardDesc.js","Card/index.js","StyledComponent/MyButton.js","StyledComponent/YourButton.js","FileTree/FileNode.js","FileTree/index.js","Form/Input.js","Form/Textarea.js","Form/InputNumber.js","Form/Select.js","Form/Radio.js","Form/Checkbox.js","Form/index.js","Layout/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","this","props","tabList","changeTab","length","map","tabItem","key","id","onClick","label","Component","CardTeacher","name","data","CardDesc","state","isOpen","toggle","setState","cn","className","children","Card","title","desc","like","students","price","teacher","Button","styled","button","MyButton","YourButton","style","btn","FileNode","open","toggleOpen","files","file","FileTree","Input","textValue","onChange","e","target","value","type","textareaValue","onChangeTextarea","InputNumber","numberValue","parseInt","gender","Select","selectValue","find","g","Radio","radioValue","checked","Checkbox","checkboxValue","male","female","JSON","stringify","Form","Textarea","Layout","tabIndex","tabId","lesson","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.be3860ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"YourButton_btn__1vfS_\"};","import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        const { tabList, changeTab } = this.props;\r\n        return (\r\n            <div>\r\n                {tabList.length > 0 &&\r\n                    <ul>\r\n                        {tabList.map(tabItem =>\r\n                            <li key={tabItem.id} onClick={() => { changeTab(tabItem.id) }}>\r\n                                {tabItem.label}\r\n                            </li>)}\r\n                    </ul>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport './Card.css';\r\n\r\nclass CardTeacher extends Component {\r\n    render() {\r\n        const { name } = this.props.data;\r\n\r\n        return (\r\n            <span>{name}</span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardTeacher;","import React, { Component } from 'react';\r\n\r\nclass CardDesc extends Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isOpen } = this.state;\r\n        const cn = `card__desc__text ${isOpen ? '' : 'less'}`;\r\n\r\n        return (\r\n            <div className=\"card__desc\">\r\n                <div className={cn}>\r\n                    {this.props.children}\r\n                </div>\r\n                <button className=\"card__desc__button\" onClick={this.toggle}>\r\n                    {isOpen ? 'Less' : 'More'}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardDesc;","import React, { Component } from 'react';\r\nimport './Card.css';\r\n\r\nimport CardTeacher from './CardTeacher';\r\nimport CardDesc from './CardDesc';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        const { title, desc, like, students, price, teacher } = this.props.data;\r\n\r\n        return <div className=\"card\">\r\n            <h2 className=\"card__title\">{title}</h2>\r\n            <CardDesc>{desc}</CardDesc>\r\n            <div className=\"card__stats\">\r\n                <div className=\"card__stat\">\r\n                    <label>滿意度</label>\r\n                    <div>{like}</div>\r\n                </div>\r\n                <div className=\"card__stat\">\r\n                    <label>學生</label>\r\n                    <div>{students}</div>\r\n                </div>\r\n                <div className=\"card__stat\">\r\n                    <label>價格</label>\r\n                    <div>{price}</div>\r\n                </div>\r\n                <div className=\"card__stat\">\r\n                    <label>老師</label>\r\n                    <CardTeacher data={teacher} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\nbackground: #cde;\r\nborder-radius: 20px;\r\nfont-size: 2em;\r\nwidth: 250px;\r\ntext-align: center;\r\npadding: 0.5em 0;\r\nmargin-right: 0.5em;\r\n`\r\n\r\nclass MyButton extends Component {\r\n    render() {\r\n        return (\r\n            <Button>{this.props.children}</Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyButton;","import React, { Component } from 'react';\r\nimport style from './YourButton.module.scss';\r\n\r\nclass YourButton extends Component {\r\n    render() {\r\n        return (\r\n            <button className={style.btn}>{this.props.children}</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default YourButton;","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nclass FileNode extends Component {\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    toggleOpen = () => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        })\r\n    }\r\n    render() {\r\n        const { name, files } = this.props;\r\n        const { open } = this.state;\r\n        if (files) {\r\n            return (\r\n                <div>\r\n                    <div className={`folder ${open ? 'open' : ''}`} onClick={this.toggleOpen}>{name}</div>\r\n                    {!open ? null :\r\n                        (<ul>\r\n                            {files.map((file) => <FileNode {...file} />)}\r\n                        </ul>)\r\n                    }\r\n                </div>\r\n            );\r\n        } else {\r\n            return <li>{name}</li>\r\n        }\r\n    }\r\n}\r\n\r\nexport default FileNode;","import React, { Component } from 'react';\r\nimport files from './../assets/files.json';\r\nimport FileNode from './FileNode';\r\n\r\nclass FileTree extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FileNode {...files} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileTree;","import React, { Component } from 'react';\r\n\r\nclass Input extends Component {\r\n    state = {\r\n        textValue: 'Hi~~~',\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            textValue: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>{this.state.textValue}</h3>\r\n                <input type=\"text\" value={this.state.textValue} onChange={this.onChange} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\n\r\nclass Input extends Component {\r\n    state = {\r\n        textareaValue: 'multi!!!'\r\n    }\r\n\r\n    onChangeTextarea = e => {\r\n        this.setState({\r\n            textareaValue: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>{this.state.textareaValue}</h3>\r\n                <textarea value={this.state.textareaValue} onChange={this.onChangeTextarea} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\n\r\nclass InputNumber extends Component {\r\n    state = {\r\n        numberValue: 0\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            numberValue: parseInt(e.target.value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>{this.state.numberValue}</h3>\r\n                <input type=\"number\" value={this.state.numberValue} onChange={this.onChange} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputNumber;","import React, { Component } from 'react';\r\n\r\nconst gender = [\r\n    { label: 'Male', value: 0 },\r\n    { label: 'Female', value: 1 }\r\n]\r\n\r\nclass Select extends Component {\r\n    state = {\r\n        selectValue: `${gender[0].value}`\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            selectValue: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { selectValue } = this.state;\r\n        return (\r\n            <div>\r\n                <h3>{gender.find(g=>`${g.value}`===selectValue).label}</h3>\r\n                <select value={selectValue} onChange={this.onChange}>\r\n                    {gender.map(g => (\r\n                        <option value={g.value} key={g.value}>{g.label}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Select;","import React, { Component } from 'react';\r\n\r\nclass Radio extends Component {\r\n    state = {\r\n        radioValue: 'male'\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            radioValue: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { radioValue } = this.state;\r\n        return (\r\n            <div>\r\n                <h3>{radioValue}</h3>\r\n                <input type=\"radio\" value=\"male\" onChange={this.onChange} checked={radioValue === 'male'} />\r\n                <label>Male</label>\r\n                <input type=\"radio\" value=\"female\" onChange={this.onChange} checked={radioValue === 'female'} />\r\n                <label>Female</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Radio;","import React, { Component } from 'react';\r\n\r\nclass Checkbox extends Component {\r\n    state = {\r\n        checkboxValue: {\r\n            male: false,\r\n            female: false,\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        const key = e.target.value;\r\n        this.setState(state => ({\r\n            checkboxValue: {\r\n                ...state.checkboxValue,\r\n                [key]: !state.checkboxValue[key]\r\n            }\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const { checkboxValue } = this.state;\r\n        return (\r\n            <div>\r\n                <pre>{JSON.stringify(checkboxValue)}</pre>\r\n                <input type=\"checkbox\" value=\"male\" onChange={this.onChange} checked={checkboxValue.male} />\r\n                <label>Male</label>\r\n                <input type=\"checkbox\" value=\"female\" onChange={this.onChange} checked={checkboxValue.female} />\r\n                <label>Female</label>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkbox;","import React, { Component } from 'react';\r\nimport Input from './Input';\r\nimport Textarea from './Textarea';\r\nimport InputNumber from './InputNumber';\r\nimport Select from './Select';\r\nimport Radio from './Radio';\r\nimport Checkbox from './Checkbox';\r\n\r\nclass Form extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Input />\r\n                <hr />\r\n                <Textarea />\r\n                <hr />\r\n                <InputNumber />\r\n                <hr />\r\n                <Select />\r\n                <hr />\r\n                <Radio />\r\n                <hr />\r\n                <Checkbox />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport Navbar from './Navbar';\r\nimport Card from './../Card/index';\r\nimport MyButton from './../StyledComponent/MyButton';\r\nimport YourButton from './../StyledComponent/YourButton';\r\nimport FileTree from './../FileTree/index';\r\nimport Form from './../Form/index';\r\n\r\nimport lesson from './../lesson-react.json';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        tabIndex: 0,\r\n        tabList: [\r\n            { label: 'Card', id: 0 },\r\n            { label: 'Styled Component Try', id: 1 },\r\n            { label: 'File Tree', id: 2 },\r\n            { label: 'My Form', id: 3 }\r\n        ]\r\n    };\r\n\r\n    changeTab = tabId => {\r\n        this.setState({\r\n            tabIndex: tabId\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { tabIndex, tabList } = this.state;\r\n        return (\r\n            <div>\r\n                <Navbar tabList={tabList} changeTab={this.changeTab} />\r\n                {tabIndex === 0 && <Card data={lesson} />}\r\n                {tabIndex === 1 &&\r\n                    <>\r\n                        <MyButton>Hello</MyButton>\r\n                        <YourButton>World</YourButton>\r\n                    </>\r\n                }\r\n                {tabIndex === 2 && <FileTree />}\r\n                {tabIndex === 3 && <Form />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\nimport Layout from './Layout/index';\n\n\nfunction App() {\n\n  return (\n    <div>\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}