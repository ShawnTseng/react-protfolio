{"version":3,"sources":["YourButton.module.scss","Navbar.js","CardTeacher.js","CardDesc.js","Card.js","MyButton.js","YourButton.js","FileTree/FileNode.js","FileTree/index.js","Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","this","props","tabList","changeTab","length","map","tabItem","key","id","onClick","label","Component","CardTeacher","name","data","CardDesc","state","isOpen","toggle","setState","cn","className","children","Card","title","desc","like","students","price","teacher","Button","styled","button","MyButton","YourButton","style","btn","FileNode","open","toggleOpen","files","file","FileTree","Layout","tabIndex","tabId","lesson","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cc860a07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"YourButton_btn__3JXrr\"};","import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        const { tabList, changeTab } = this.props;\r\n        return (\r\n            <div>\r\n                {tabList.length > 0 &&\r\n                    <ul>\r\n                        {tabList.map(tabItem =>\r\n                            <li key={tabItem.id} onClick={() => { changeTab(tabItem.id) }}>\r\n                                {tabItem.label}\r\n                            </li>)}\r\n                    </ul>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport './Card.css';\r\n\r\nclass CardTeacher extends Component {\r\n    render() {\r\n        const { name } = this.props.data;\r\n\r\n        return (\r\n            <span>{name}</span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardTeacher;","import React, { Component } from 'react';\r\n\r\nclass CardDesc extends Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isOpen } = this.state;\r\n        const cn = `card__desc__text ${isOpen ? '' : 'less'}`;\r\n\r\n        return (\r\n            <div className=\"card__desc\">\r\n                <div className={cn}>\r\n                    {this.props.children}\r\n                </div>\r\n                <button className=\"card__desc__button\" onClick={this.toggle}>\r\n                    {isOpen ? 'Less' : 'More'}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardDesc;","import React, { Component } from 'react';\r\nimport './Card.css';\r\n\r\nimport CardTeacher from './CardTeacher';\r\nimport CardDesc from './CardDesc';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        const { title, desc, like, students, price, teacher } = this.props.data;\r\n\r\n        return <div className=\"card\">\r\n            <h2 className=\"card__title\">{title}</h2>\r\n            <CardDesc>{desc}</CardDesc>\r\n            <div className=\"card__stats\">\r\n                <div className=\"card__stat\">\r\n                    <label>滿意度</label>\r\n                    <div>{like}</div>\r\n                </div>\r\n                <div className=\"card__stat\">\r\n                    <label>學生</label>\r\n                    <div>{students}</div>\r\n                </div>\r\n                <div className=\"card__stat\">\r\n                    <label>價格</label>\r\n                    <div>{price}</div>\r\n                </div>\r\n                <div className=\"card__stat\">\r\n                    <label>老師</label>\r\n                    <CardTeacher data={teacher} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\nbackground: #cde;\r\nborder-radius: 20px;\r\nfont-size: 2em;\r\nwidth: 250px;\r\ntext-align: center;\r\npadding: 0.5em 0;\r\nmargin-right: 0.5em;\r\n`\r\n\r\nclass MyButton extends Component {\r\n    render() {\r\n        return (\r\n            <Button>{this.props.children}</Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyButton;","import React, { Component } from 'react';\r\nimport style from './YourButton.module.scss';\r\n\r\nclass YourButton extends Component {\r\n    render() {\r\n        return (\r\n            <button className={style.btn}>{this.props.children}</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default YourButton;","import React, { Component } from 'react';\r\n\r\nclass FileNode extends Component {\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    toggleOpen = () => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        })\r\n    }\r\n    render() {\r\n        const { name, files } = this.props;\r\n        const { open } = this.state;\r\n        if (files) {\r\n            return (\r\n                <div>\r\n                    <div onClick={this.toggleOpen}>{name}</div>\r\n                    {!open ? null :\r\n                        (<ul>\r\n                            {files.map((file) => <FileNode {...file} />)}\r\n                        </ul>)\r\n                    }\r\n                </div>\r\n            );\r\n        } else {\r\n            return <li>{name}</li>\r\n        }\r\n    }\r\n}\r\n\r\nexport default FileNode;","import React, { Component } from 'react';\r\nimport files from './../assets/files.json';\r\nimport FileNode from './FileNode';\r\n\r\nclass FileTree extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FileNode {...files} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileTree;","import React, { Component } from 'react';\r\nimport Navbar from './Navbar';\r\nimport Card from './Card';\r\nimport MyButton from './MyButton';\r\nimport YourButton from './YourButton';\r\nimport FileTree from './FileTree/index';\r\n\r\nimport lesson from './lesson-react.json';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        tabIndex: 0,\r\n        tabList: [\r\n            { label: 'Card', id: 0 },\r\n            { label: 'Styled Component Try', id: 1 },\r\n            { label: 'File Tree', id: 2 }\r\n        ]\r\n    };\r\n\r\n    changeTab = tabId => {\r\n        this.setState({\r\n            tabIndex: tabId\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { tabIndex, tabList } = this.state;\r\n        return (\r\n            <div>\r\n                <Navbar tabList={tabList} changeTab={this.changeTab} />\r\n                {tabIndex === 0 && <Card data={lesson} />}\r\n                {tabIndex === 1 &&\r\n                    <>\r\n                        <MyButton>Hello</MyButton>\r\n                        <YourButton>World</YourButton>\r\n                    </>\r\n                }\r\n                {tabIndex === 2 && <FileTree />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\nimport Layout from './Layout';\n\n\nfunction App() {\n\n  return (\n    <div>\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}